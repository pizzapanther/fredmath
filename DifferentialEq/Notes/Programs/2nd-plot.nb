(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     64313,       1383]
NotebookOptionsPosition[     63242,       1344]
NotebookOutlinePosition[     63584,       1359]
CellTagsIndexPosition[     63541,       1356]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "3"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
    "y", ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol1", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "3"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
    "y", ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol2", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "3"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
       RowBox[{"-", "6"}]}]}], "}"}], ",", "y", ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol3", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "3"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", "y", ",", "x"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol4", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "3"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "6"}]}], "}"}], ",", 
    "y", ",", "x"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol5", "=", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
        RowBox[{"2", 
         RowBox[{
          RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", 
        RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "0"}], ",", " ", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "3"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "3"}]}], "}"}], ",", 
    "y", ",", "x"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6217000623677964`*^9, 3.621700123292882*^9}, {
   3.621700542323468*^9, 3.6217005617084956`*^9}, {3.621700762344776*^9, 
   3.621700805369837*^9}, {3.6217009356450195`*^9, 3.621700942845029*^9}, 
   3.621701012555127*^9, {3.6217010928112392`*^9, 3.6217010945562415`*^9}, {
   3.6217011672363434`*^9, 3.6217011706213484`*^9}, {3.6217014157966914`*^9, 
   3.621701416116692*^9}, {3.6217014829967856`*^9, 3.6217014973768053`*^9}, {
   3.621770779783496*^9, 3.621770801063525*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", "x"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "x"}]}], ")"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6217005621084957`*^9, 3.621700768769786*^9, 3.6217008192898564`*^9, 
   3.6217008681049247`*^9, {3.6217009865050907`*^9, 3.621701013210128*^9}, 
   3.6217010958312435`*^9, 3.6217011721513505`*^9, 3.621701416596692*^9, 
   3.621701474066773*^9, 3.621701530606852*^9, 3.6217707989935226`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6217005621084957`*^9, 3.621700768769786*^9, 3.6217008192898564`*^9, 
   3.6217008681049247`*^9, {3.6217009865050907`*^9, 3.621701013210128*^9}, 
   3.6217010958312435`*^9, 3.6217011721513505`*^9, 3.621701416596692*^9, 
   3.621701474066773*^9, 3.621701530606852*^9, 3.6217707989985223`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"3", " ", "x"}]}], ")"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6217005621084957`*^9, 3.621700768769786*^9, 3.6217008192898564`*^9, 
   3.6217008681049247`*^9, {3.6217009865050907`*^9, 3.621701013210128*^9}, 
   3.6217010958312435`*^9, 3.6217011721513505`*^9, 3.621701416596692*^9, 
   3.621701474066773*^9, 3.621701530606852*^9, 3.6217707990085225`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", "x"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"4", " ", "x"}]}], ")"}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6217005621084957`*^9, 3.621700768769786*^9, 3.6217008192898564`*^9, 
   3.6217008681049247`*^9, {3.6217009865050907`*^9, 3.621701013210128*^9}, 
   3.6217010958312435`*^9, 3.6217011721513505`*^9, 3.621701416596692*^9, 
   3.621701474066773*^9, 3.621701530606852*^9, 3.6217707990085225`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6217005621084957`*^9, 3.621700768769786*^9, 3.6217008192898564`*^9, 
   3.6217008681049247`*^9, {3.6217009865050907`*^9, 3.621701013210128*^9}, 
   3.6217010958312435`*^9, 3.6217011721513505`*^9, 3.621701416596692*^9, 
   3.621701474066773*^9, 3.621701530606852*^9, 3.621770799013522*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", "x"]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.6217005621084957`*^9, 3.621700768769786*^9, 3.6217008192898564`*^9, 
   3.6217008681049247`*^9, {3.6217009865050907`*^9, 3.621701013210128*^9}, 
   3.6217010958312435`*^9, 3.6217011721513505`*^9, 3.621701416596692*^9, 
   3.621701474066773*^9, 3.621701530606852*^9, 3.6217707990185223`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", "x"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", "x"}]}], ")"}]}], ",", " ", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "x"}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"3", " ", "x"}]}], ")"}]}], ",", "  ", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", "x"]}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"4", " ", "x"}]}], ")"}]}], ",", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", "x"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}]}], ",", " ", 
      RowBox[{"3", " ", 
       SuperscriptBox["\[ExponentialE]", "x"]}]}], "  ", "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
    RowBox[{"BaseStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "->", "14"}], ",", " ", 
       RowBox[{"FontWeight", "->", "Bold"}]}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6217710096338177`*^9, 3.6217710980439415`*^9}, {
  3.6217712126491013`*^9, 3.621771258309166*^9}, {3.6217712920992126`*^9, 
  3.6217713019542265`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
j/I=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
D1eVbxMt+R9ROQl+
     "]]}, 
   {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
CeTA
     "]]}, 
   {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/wFwKjxC
     "]]}, 
   {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
WXtDqttHMx/8QouO1aT/D2os8C4=
     "]]}, 
   {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAALj8W6v///7+goTUZAPzZP1RqJ4j5
+v+/IdP4fioE2j96lTgm8/X/v7bUpHVXDNo/x+taYubr/7/VRfEYuRzaP2CY
n9rM1/+/QQUATps92j+R8SjLma//v7gZ7Cfcf9o/9KM7rDNf/78DMzFYVQbb
P7oIYW5nvv6/aq/tblQb3D9/zdbrwWH9v8KrueGbmt4/6aUZFzcc/L8ZW6/j
WZHgPyrfSAkP3fq/PS1Gtwzp4T+kE6P02YL5vxjGxFNxfeM/w1vKjb8/+L8O
w65q9hblPxyfHCCY4fa/3wkgDc745j9LQ1t504n1v1jbRN+r++g/H/tmgClJ
9L/0i4mcfQTrPy2unYBy7fK/lBnyeEhp7T/gdKEu1qjxv3f3AOdD1u8/aZyR
o5xq8L/pmz4UXDTxP1h+WSOsIu6/sdN74rm38j8o6ylbVJ7rvzTAzrTWP/Q/
a05QheLj6L8NrByWMg32P1pzTz02Nua/JPrNTgr69z+Tv+hQv7bjv1R/fMNe
7Pk/PwLYVi4B4b/a6ZaBszb8P2rYwnCl89y/dzploJ6I/j88mYEYunjXv985
Bcy2oQBAaN3x21kX0r/IcIMeIRcCQE/gLK3IJMq/hrjU7fWQA0A2v5vX6oS+
v5o9/9CDTQVAOfBdY95jpL/VsqtzIBAHQCuD7wrAdaM/MJpwmgPuCECvx+6p
f1i/P8ZJse5KIAtAvUnKODrCyT9CPmXIm1kNQOuqomlOWNI/Tr26T3f3D0Cd
rS6b9LXXP7qR6zyUYRFAvGGGFTC33D/o1dYEgcsSQHoUmdVPEuE/+RkDmFd1
FEDM0NRE0prjP6ji1HTNJBZAccs3Jo8W5j//OjyxP+4XQKTPRBVmyOg/cSHu
PHoIGkCMrLeoB0zrPzw0gpA2KRxAAZPUScMF7j+KCyqxJaoeQBepq8ekSPA/
ekqOvf2ZIEDWp4AjBYjxP706Tfai8iFAW6sqhnLi8j8uUtXDJIgjQDybBzvF
JfQ/tayuE9UiJUDjj7n2JIT1P4deJOwMBidAh3jq37zf9T887Ns/i48nQP33
mmM=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 14, FontWeight -> Bold},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{Automatic, 183.12143573338994`},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-2, 2}, {-8.062042488751649, 11.780359263988537`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6217712594541674`*^9, 3.621771302959228*^9, 
  3.6217715097795177`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"p1", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p2", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol1"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p3", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol2"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p4", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol3"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p5", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol4"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p6", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"y", "[", "x", "]"}], "/.", "sol5"}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "p1", ",", " ", "p2", " ", ",", " ", "p3", ",", "p4", ",", " ", "p5", ",",
      " ", "p6"}], "}"}], "  ", ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6217001631629376`*^9, 3.6217001695079465`*^9}, {
   3.6217006243185835`*^9, 3.62170065768363*^9}, {3.621700725779725*^9, 
   3.621700859989913*^9}, {3.621700899984969*^9, 3.6217009087699814`*^9}, {
   3.6217009479900365`*^9, 3.6217009610150547`*^9}, {3.6217010741862135`*^9, 
   3.6217010857812295`*^9}, {3.621701135381299*^9, 3.6217011632663383`*^9}, {
   3.621701195546383*^9, 3.6217012051063967`*^9}, 3.6217013178965545`*^9, {
   3.6217014550717463`*^9, 3.621701458406751*^9}, {3.621701501856812*^9, 
   3.6217015263368464`*^9}, {3.621770837498576*^9, 3.6217708843186417`*^9}, {
   3.6217709197486916`*^9, 3.621770923413697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sol", "=", 
   RowBox[{"DSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"y", "''"}], "[", "x", "]"}], "+", " ", 
         RowBox[{"2", 
          RowBox[{
           RowBox[{"y", "'"}], "[", "x", "]"}]}], "+", " ", 
         RowBox[{"2", 
          RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
        RowBox[{
         RowBox[{"4", 
          RowBox[{"Cos", "[", "x", "]"}]}], " ", "+", " ", 
         RowBox[{"2", 
          RowBox[{"Sin", "[", "x", "]"}]}]}]}], ",", " ", 
       RowBox[{
        RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",",
      "y", ",", "x"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"y", "[", "x", "]"}], "/.", "sol"}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", ".1"}], ",", "10"}], "}"}], ",", "\[IndentingNewLine]", " ", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontSize", "->", "14"}], ",", " ", 
      RowBox[{"FontWeight", "->", "Bold"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", " ", 
      RowBox[{"Thickness", "[", ".01", "]"}]}], " ", "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.679262995452737*^9, 3.6792631168689737`*^9}, {
  3.679263219756002*^9, 3.6792633075957894`*^9}, {3.67926336850148*^9, 
  3.6792634426060395`*^9}, {3.679263485262698*^9, 3.679263538499997*^9}, {
  3.6799579019527397`*^9, 3.6799580391264257`*^9}, {3.6799581341060424`*^9, 
  3.6799581753364763`*^9}, {3.679958212930032*^9, 3.679958228075045*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.01], Opacity[1.], LineBox[CompressedData["
1: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
AE/tsko=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontSize -> 14, FontWeight -> Bold},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-0.1, 10}, {-1.9821139912671415`, 1.9992229393100065`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6799582286124215`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "=", 
  RowBox[{"DSolve", "[", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}], "-", 
       RowBox[{"4", 
        RowBox[{"y", "[", "x", "]"}]}]}], "\[Equal]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], " ", "-", " ", "3"}], ")"}], " ", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "x"}], "]"}]}]}], "}"}], ",", "y", ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6794408060932846`*^9, 3.6794408102495646`*^9}, {
  3.6794408537975645`*^9, 3.679440875751004*^9}, {3.679444811389003*^9, 
  3.679444846530161*^9}, {3.679444907468521*^9, 3.679444909577938*^9}, {
  3.6794449838241673`*^9, 3.67944499558996*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "x", "}"}], ",", 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]], " ", 
        RowBox[{"C", "[", "1", "]"}]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "x"}]], " ", 
        RowBox[{"C", "[", "2", "]"}]}], "+", 
       RowBox[{
        FractionBox["1", "32"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "x", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}], "+", 
          RowBox[{"13", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}], "-", 
          RowBox[{"4", " ", 
           SuperscriptBox["x", "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "x"}], "]"}]}]}], ")"}]}]}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.679444995855559*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", " ", 
    RowBox[{"(", 
     RowBox[{"-", "2"}], ")"}], " ", "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", " ", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FontSize", "->", "14"}], ",", " ", 
      RowBox[{"FontWeight", "->", "Bold"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.679958324201516*^9, 3.6799583332429247`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"5", 
        RowBox[{"x", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"3", 
        RowBox[{"y", "[", "t", "]"}]}], " ", "-", " ", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "t"}]]}], " ", "+", " ", "1"}]}], " ", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "[", "t", "]"}]}], " ", "+", " ", 
       RowBox[{"y", "[", "t", "]"}], " ", "+", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", "-", 
       RowBox[{"5", "t"}], "+", " ", "7"}]}], ",", " ", 
     RowBox[{
      RowBox[{"x", "[", "0", "]"}], "\[Equal]", "0"}], ",", " ", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", 
     RowBox[{"x", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.686475418052601*^9, 3.6864755469433503`*^9}, {
  3.6864756090692415`*^9, 3.686475611175255*^9}, {3.6864757783710237`*^9, 
  3.686475786405075*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      FractionBox["1", "480"], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{"224", "+", 
        RowBox[{"525", " ", 
         SuperscriptBox["\[ExponentialE]", "t"]}], "-", 
        RowBox[{"1820", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3", " ", "t"}]]}], "+", 
        RowBox[{"1071", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"5", " ", "t"}]]}], "-", 
        RowBox[{"900", " ", 
         SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}]}]}], ",", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "480"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "t"}]], " ", 
      RowBox[{"(", 
       RowBox[{"128", "+", 
        RowBox[{"1335", " ", 
         SuperscriptBox["\[ExponentialE]", "t"]}], "-", 
        RowBox[{"1820", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"3", " ", "t"}]]}], "+", 
        RowBox[{"357", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"5", " ", "t"}]]}], "-", 
        RowBox[{"1500", " ", 
         SuperscriptBox["\[ExponentialE]", "t"], " ", "t"}]}], ")"}]}]}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{3.686475387784896*^9, 3.686475547926157*^9, 
  3.686475614030073*^9, 3.6864757875438824`*^9}]
}, Open  ]]
},
WindowSize->{879, 853},
WindowMargins->{{58, Automatic}, {Automatic, 25}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (July 28, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 4174, 123, 126, "Input"],
Cell[4757, 147, 717, 19, 30, "Output"],
Cell[5477, 168, 696, 18, 30, "Output"],
Cell[6176, 188, 726, 19, 30, "Output"],
Cell[6905, 209, 717, 19, 30, "Output"],
Cell[7625, 230, 643, 15, 30, "Output"],
Cell[8271, 247, 581, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8889, 266, 1706, 49, 74, "Input"],
Cell[10598, 317, 28481, 487, 198, "Output"]
}, Open  ]],
Cell[39094, 807, 2772, 73, 145, "Input"],
Cell[CellGroupData[{
Cell[41891, 884, 1887, 50, 107, "Input"],
Cell[43781, 936, 14129, 242, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57947, 1183, 781, 21, 30, "Input"],
Cell[58731, 1206, 1088, 33, 46, "Output"]
}, Open  ]],
Cell[59834, 1242, 498, 14, 30, "Input"],
Cell[CellGroupData[{
Cell[60357, 1260, 1318, 36, 55, "Input"],
Cell[61678, 1298, 1548, 43, 139, "Output"]
}, Open  ]]
}
]
*)

